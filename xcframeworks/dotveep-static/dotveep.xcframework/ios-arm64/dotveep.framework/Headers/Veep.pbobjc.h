// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: veep.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(VPKGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define VPKGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if VPKGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/VPKGPBProtocolBuffers.h>
#else
 #import "VPKGPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class VPKPDiscreteTime;
@class VPKPDiscreteTimeRange;
@class VPKPDiscreteTimeRangeRect;
@class VPKPDiscreteTimeRangeRectValidationError;
@class VPKPDiscreteTimeRangeValidationError;
@class VPKPDiscreteTimeValidationError;
@class VPKPRect;
@class VPKPRectValidationError;
@class VPKPVeepHeader;
@class VPKPVeepHeaderValidationError;
@class VPKPVeepTrackElement;
@class VPKPVeepTrackElementValidationError;
@class VPKPVeepTrackHeader;
@class VPKPVeepTrackHeaderValidationError;
@class VPKPVeepTrackTag;
@class VPKPVeepTrackTagValidationError;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum VPKPVeepTrackHeader_VeepTrackType

typedef VPKGPB_ENUM(VPKPVeepTrackHeader_VeepTrackType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  VPKPVeepTrackHeader_VeepTrackType_VPKGPBUnrecognizedEnumeratorValue = kVPKGPBUnrecognizedEnumeratorValue,
  VPKPVeepTrackHeader_VeepTrackType_URL = 0,
  VPKPVeepTrackHeader_VeepTrackType_Retail = 1,
  VPKPVeepTrackHeader_VeepTrackType_Blog = 2,
};

VPKGPBEnumDescriptor *VPKPVeepTrackHeader_VeepTrackType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL VPKPVeepTrackHeader_VeepTrackType_IsValidValue(int32_t value);

#pragma mark - VPKPVeepRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (VPKGPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c VPKGPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
VPKGPB_FINAL @interface VPKPVeepRoot : VPKGPBRootObject
@end

#pragma mark - VPKPVeep

typedef VPKGPB_ENUM(VPKPVeep_FieldNumber) {
  VPKPVeep_FieldNumber_Header = 1,
  VPKPVeep_FieldNumber_TrackElementsArray = 2,
};

VPKGPB_FINAL @interface VPKPVeep : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** All elements involved in all veep tracks, in order of first use. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VPKPVeepTrackElement*> *trackElementsArray;
/** The number of items in @c trackElementsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger trackElementsArray_Count;

@end

#pragma mark - VPKPVeepHeaderContainer

typedef VPKGPB_ENUM(VPKPVeepHeaderContainer_FieldNumber) {
  VPKPVeepHeaderContainer_FieldNumber_Header = 1,
};

VPKGPB_FINAL @interface VPKPVeepHeaderContainer : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepHeader *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

@end

#pragma mark - VPKPVeepTrackElementContainer

typedef VPKGPB_ENUM(VPKPVeepTrackElementContainer_FieldNumber) {
  VPKPVeepTrackElementContainer_FieldNumber_TrackElement = 2,
};

VPKGPB_FINAL @interface VPKPVeepTrackElementContainer : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackElement *trackElement;
/** Test to see if @c trackElement has been set. */
@property(nonatomic, readwrite) BOOL hasTrackElement;

@end

#pragma mark - VPKPVeepHeader

typedef VPKGPB_ENUM(VPKPVeepHeader_FieldNumber) {
  VPKPVeepHeader_FieldNumber_Identifier = 1,
  VPKPVeepHeader_FieldNumber_Title = 2,
  VPKPVeepHeader_FieldNumber_Description_p = 3,
  VPKPVeepHeader_FieldNumber_CreatorEmail = 4,
  VPKPVeepHeader_FieldNumber_ThumbnailData = 5,
  VPKPVeepHeader_FieldNumber_OriginalContentUri = 6,
  VPKPVeepHeader_FieldNumber_ContentType = 7,
  VPKPVeepHeader_FieldNumber_OriginalContentWidth = 8,
  VPKPVeepHeader_FieldNumber_OriginalContentHeight = 9,
  VPKPVeepHeader_FieldNumber_OriginalIdentifier = 10,
  VPKPVeepHeader_FieldNumber_PreviousIdentifier = 11,
  VPKPVeepHeader_FieldNumber_AlternativeContentUrlsArray = 12,
  VPKPVeepHeader_FieldNumber_PreviewURL = 13,
};

/**
 * Veep data
 **/
VPKGPB_FINAL @interface VPKPVeepHeader : VPKGPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *identifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *creatorEmail;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contentType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *thumbnailData;

@property(nonatomic, readwrite, copy, null_resettable) NSString *originalContentUri;

@property(nonatomic, readwrite) int32_t originalContentWidth;

@property(nonatomic, readwrite) int32_t originalContentHeight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *alternativeContentUrlsArray;
/** The number of items in @c alternativeContentUrlsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger alternativeContentUrlsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *originalIdentifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *previousIdentifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *previewURL;

@end

#pragma mark - VPKPVeepTrackHeader

typedef VPKGPB_ENUM(VPKPVeepTrackHeader_FieldNumber) {
  VPKPVeepTrackHeader_FieldNumber_Identifier = 1,
  VPKPVeepTrackHeader_FieldNumber_Title = 2,
  VPKPVeepTrackHeader_FieldNumber_Description_p = 3,
  VPKPVeepTrackHeader_FieldNumber_URL = 4,
  VPKPVeepTrackHeader_FieldNumber_Type = 7,
};

/**
 * Veep Track metadata - within stream
 **/
VPKGPB_FINAL @interface VPKPVeepTrackHeader : VPKGPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *identifier;

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@property(nonatomic, readwrite) VPKPVeepTrackHeader_VeepTrackType type;

@end

/**
 * Fetches the raw value of a @c VPKPVeepTrackHeader's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t VPKPVeepTrackHeader_Type_RawValue(VPKPVeepTrackHeader *message);
/**
 * Sets the raw value of an @c VPKPVeepTrackHeader's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetVPKPVeepTrackHeader_Type_RawValue(VPKPVeepTrackHeader *message, int32_t value);

#pragma mark - VPKPVeepTrackTag

typedef VPKGPB_ENUM(VPKPVeepTrackTag_FieldNumber) {
  VPKPVeepTrackTag_FieldNumber_Identifier = 1,
};

/**
 * Reference to a previously seen VeepTrackHeader
 **/
VPKGPB_FINAL @interface VPKPVeepTrackTag : VPKGPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *identifier;

@end

#pragma mark - VPKPRect

typedef VPKGPB_ENUM(VPKPRect_FieldNumber) {
  VPKPRect_FieldNumber_X = 1,
  VPKPRect_FieldNumber_Y = 2,
  VPKPRect_FieldNumber_Width = 3,
  VPKPRect_FieldNumber_Height = 4,
};

/**
 * Abstract still geometry
 **/
VPKGPB_FINAL @interface VPKPRect : VPKGPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@property(nonatomic, readwrite) float width;

@property(nonatomic, readwrite) float height;

@end

#pragma mark - VPKPDiscreteTime

typedef VPKGPB_ENUM(VPKPDiscreteTime_FieldNumber) {
  VPKPDiscreteTime_FieldNumber_Timescale = 1,
  VPKPDiscreteTime_FieldNumber_Value = 2,
};

/**
 * This one is based on Apple's CMTime
 **/
VPKGPB_FINAL @interface VPKPDiscreteTime : VPKGPBMessage

@property(nonatomic, readwrite) int32_t timescale;

@property(nonatomic, readwrite) int64_t value;

@end

#pragma mark - VPKPDiscreteTimeRange

typedef VPKGPB_ENUM(VPKPDiscreteTimeRange_FieldNumber) {
  VPKPDiscreteTimeRange_FieldNumber_Start = 1,
  VPKPDiscreteTimeRange_FieldNumber_Duration = 2,
};

/**
 * This one is based on Apple's CMTime
 **/
VPKGPB_FINAL @interface VPKPDiscreteTimeRange : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTime *start;
/** Test to see if @c start has been set. */
@property(nonatomic, readwrite) BOOL hasStart;

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTime *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

@end

#pragma mark - VPKPDiscreteTimeRangeRect

typedef VPKGPB_ENUM(VPKPDiscreteTimeRangeRect_FieldNumber) {
  VPKPDiscreteTimeRangeRect_FieldNumber_TimeRange = 1,
  VPKPDiscreteTimeRangeRect_FieldNumber_Rect = 2,
};

/**
 * Annotation is present and stationary for a time range defined discreetly
 **/
VPKGPB_FINAL @interface VPKPDiscreteTimeRangeRect : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeRange *timeRange;
/** Test to see if @c timeRange has been set. */
@property(nonatomic, readwrite) BOOL hasTimeRange;

@property(nonatomic, readwrite, strong, null_resettable) VPKPRect *rect;
/** Test to see if @c rect has been set. */
@property(nonatomic, readwrite) BOOL hasRect;

@end

#pragma mark - VPKPVeepTrackElement

typedef VPKGPB_ENUM(VPKPVeepTrackElement_FieldNumber) {
  VPKPVeepTrackElement_FieldNumber_Header = 1,
  VPKPVeepTrackElement_FieldNumber_Tag = 3,
  VPKPVeepTrackElement_FieldNumber_DiscreteTimeRangeRect = 9,
  VPKPVeepTrackElement_FieldNumber_Rect = 10,
};

typedef VPKGPB_ENUM(VPKPVeepTrackElement_Meta_OneOfCase) {
  VPKPVeepTrackElement_Meta_OneOfCase_VPKGPBUnsetOneOfCase = 0,
  VPKPVeepTrackElement_Meta_OneOfCase_Header = 1,
  VPKPVeepTrackElement_Meta_OneOfCase_Tag = 3,
};

typedef VPKGPB_ENUM(VPKPVeepTrackElement_Data_OneOfCase) {
  VPKPVeepTrackElement_Data_OneOfCase_VPKGPBUnsetOneOfCase = 0,
  VPKPVeepTrackElement_Data_OneOfCase_DiscreteTimeRangeRect = 9,
  VPKPVeepTrackElement_Data_OneOfCase_Rect = 10,
};

/**
 * Inner unit of annotation
 **/
VPKGPB_FINAL @interface VPKPVeepTrackElement : VPKGPBMessage

@property(nonatomic, readonly) VPKPVeepTrackElement_Meta_OneOfCase metaOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackHeader *header;

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackTag *tag;

/** All future shapes and representations will go here */
@property(nonatomic, readonly) VPKPVeepTrackElement_Data_OneOfCase dataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeRangeRect *discreteTimeRangeRect;

@property(nonatomic, readwrite, strong, null_resettable) VPKPRect *rect;

@end

/**
 * Clears whatever value was set for the oneof 'meta'.
 **/
void VPKPVeepTrackElement_ClearMetaOneOfCase(VPKPVeepTrackElement *message);
/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void VPKPVeepTrackElement_ClearDataOneOfCase(VPKPVeepTrackElement *message);

#pragma mark - VPKPErrorResponse

typedef VPKGPB_ENUM(VPKPErrorResponse_FieldNumber) {
  VPKPErrorResponse_FieldNumber_Detail = 1,
};

VPKGPB_FINAL @interface VPKPErrorResponse : VPKGPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *detail;

@end

#pragma mark - VPKPVeepValidationError

typedef VPKGPB_ENUM(VPKPVeepValidationError_FieldNumber) {
  VPKPVeepValidationError_FieldNumber_Header = 1,
  VPKPVeepValidationError_FieldNumber_NonFieldErrorsArray = 2,
  VPKPVeepValidationError_FieldNumber_TrackElementsArray = 3,
};

VPKGPB_FINAL @interface VPKPVeepValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepHeaderValidationError *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/** All elements involved in all veep tracks, in order of first use. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VPKPVeepTrackElementValidationError*> *trackElementsArray;
/** The number of items in @c trackElementsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger trackElementsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepHeaderContainerValidationError

typedef VPKGPB_ENUM(VPKPVeepHeaderContainerValidationError_FieldNumber) {
  VPKPVeepHeaderContainerValidationError_FieldNumber_Header = 1,
  VPKPVeepHeaderContainerValidationError_FieldNumber_NonFieldErrorsArray = 2,
};

VPKGPB_FINAL @interface VPKPVeepHeaderContainerValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepHeaderValidationError *header;
/** Test to see if @c header has been set. */
@property(nonatomic, readwrite) BOOL hasHeader;

/**
 * Q: Does having this at the end break streaming?
 * A: No. If non_field_errors is important, trackElements will most likely be empty
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepTrackElementContainerValidationError

typedef VPKGPB_ENUM(VPKPVeepTrackElementContainerValidationError_FieldNumber) {
  VPKPVeepTrackElementContainerValidationError_FieldNumber_NonFieldErrorsArray = 2,
  VPKPVeepTrackElementContainerValidationError_FieldNumber_TrackElement = 3,
};

VPKGPB_FINAL @interface VPKPVeepTrackElementContainerValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackElementValidationError *trackElement;
/** Test to see if @c trackElement has been set. */
@property(nonatomic, readwrite) BOOL hasTrackElement;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepHeaderValidationError

typedef VPKGPB_ENUM(VPKPVeepHeaderValidationError_FieldNumber) {
  VPKPVeepHeaderValidationError_FieldNumber_IdentifierArray = 1,
  VPKPVeepHeaderValidationError_FieldNumber_TitleArray = 2,
  VPKPVeepHeaderValidationError_FieldNumber_DescriptionArray = 3,
  VPKPVeepHeaderValidationError_FieldNumber_CreatorEmailArray = 4,
  VPKPVeepHeaderValidationError_FieldNumber_ThumbnailDataArray = 5,
  VPKPVeepHeaderValidationError_FieldNumber_OriginalContentUriArray = 6,
  VPKPVeepHeaderValidationError_FieldNumber_ContentTypeArray = 7,
  VPKPVeepHeaderValidationError_FieldNumber_NonFieldErrorsArray = 8,
  VPKPVeepHeaderValidationError_FieldNumber_OriginalContentHeightArray = 10,
  VPKPVeepHeaderValidationError_FieldNumber_OriginalContentWidthArray = 11,
  VPKPVeepHeaderValidationError_FieldNumber_OriginalIdentifierArray = 12,
  VPKPVeepHeaderValidationError_FieldNumber_PreviousIdentifierArray = 13,
  VPKPVeepHeaderValidationError_FieldNumber_AlternativeContentUrlsArray = 14,
};

VPKGPB_FINAL @interface VPKPVeepHeaderValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *identifierArray;
/** The number of items in @c identifierArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger identifierArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *titleArray;
/** The number of items in @c titleArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger titleArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *descriptionArray;
/** The number of items in @c descriptionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger descriptionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *creatorEmailArray;
/** The number of items in @c creatorEmailArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger creatorEmailArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *contentTypeArray;
/** The number of items in @c contentTypeArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger contentTypeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *thumbnailDataArray;
/** The number of items in @c thumbnailDataArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger thumbnailDataArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *originalContentUriArray;
/** The number of items in @c originalContentUriArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger originalContentUriArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *originalContentWidthArray;
/** The number of items in @c originalContentWidthArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger originalContentWidthArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *originalContentHeightArray;
/** The number of items in @c originalContentHeightArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger originalContentHeightArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *alternativeContentUrlsArray;
/** The number of items in @c alternativeContentUrlsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger alternativeContentUrlsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *originalIdentifierArray;
/** The number of items in @c originalIdentifierArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger originalIdentifierArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *previousIdentifierArray;
/** The number of items in @c previousIdentifierArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger previousIdentifierArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepTrackHeaderValidationError

typedef VPKGPB_ENUM(VPKPVeepTrackHeaderValidationError_FieldNumber) {
  VPKPVeepTrackHeaderValidationError_FieldNumber_IdentifierArray = 1,
  VPKPVeepTrackHeaderValidationError_FieldNumber_TitleArray = 2,
  VPKPVeepTrackHeaderValidationError_FieldNumber_DescriptionArray = 3,
  VPKPVeepTrackHeaderValidationError_FieldNumber_URLArray = 4,
  VPKPVeepTrackHeaderValidationError_FieldNumber_TypeArray = 7,
  VPKPVeepTrackHeaderValidationError_FieldNumber_NonFieldErrorsArray = 8,
};

VPKGPB_FINAL @interface VPKPVeepTrackHeaderValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *identifierArray;
/** The number of items in @c identifierArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger identifierArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *titleArray;
/** The number of items in @c titleArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger titleArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *descriptionArray;
/** The number of items in @c descriptionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger descriptionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *URLArray;
/** The number of items in @c URLArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger URLArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *typeArray;
/** The number of items in @c typeArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger typeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepTrackTagValidationError

typedef VPKGPB_ENUM(VPKPVeepTrackTagValidationError_FieldNumber) {
  VPKPVeepTrackTagValidationError_FieldNumber_IdentifierArray = 1,
  VPKPVeepTrackTagValidationError_FieldNumber_NonFieldErrorsArray = 2,
};

VPKGPB_FINAL @interface VPKPVeepTrackTagValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *identifierArray;
/** The number of items in @c identifierArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger identifierArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPRectValidationError

typedef VPKGPB_ENUM(VPKPRectValidationError_FieldNumber) {
  VPKPRectValidationError_FieldNumber_XArray = 1,
  VPKPRectValidationError_FieldNumber_YArray = 2,
  VPKPRectValidationError_FieldNumber_WidthArray = 3,
  VPKPRectValidationError_FieldNumber_HeightArray = 4,
  VPKPRectValidationError_FieldNumber_NonFieldErrorsArray = 5,
};

VPKGPB_FINAL @interface VPKPRectValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *xArray;
/** The number of items in @c xArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger xArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *yArray;
/** The number of items in @c yArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger yArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *widthArray;
/** The number of items in @c widthArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger widthArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *heightArray;
/** The number of items in @c heightArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger heightArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPDiscreteTimeValidationError

typedef VPKGPB_ENUM(VPKPDiscreteTimeValidationError_FieldNumber) {
  VPKPDiscreteTimeValidationError_FieldNumber_TimescaleArray = 1,
  VPKPDiscreteTimeValidationError_FieldNumber_ValueArray = 2,
  VPKPDiscreteTimeValidationError_FieldNumber_NonFieldErrorsArray = 3,
};

VPKGPB_FINAL @interface VPKPDiscreteTimeValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *timescaleArray;
/** The number of items in @c timescaleArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger timescaleArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *valueArray;
/** The number of items in @c valueArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger valueArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPDiscreteTimeRangeValidationError

typedef VPKGPB_ENUM(VPKPDiscreteTimeRangeValidationError_FieldNumber) {
  VPKPDiscreteTimeRangeValidationError_FieldNumber_Start = 1,
  VPKPDiscreteTimeRangeValidationError_FieldNumber_Duration = 2,
  VPKPDiscreteTimeRangeValidationError_FieldNumber_NonFieldErrorsArray = 3,
};

VPKGPB_FINAL @interface VPKPDiscreteTimeRangeValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeValidationError *start;
/** Test to see if @c start has been set. */
@property(nonatomic, readwrite) BOOL hasStart;

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeValidationError *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPDiscreteTimeRangeRectValidationError

typedef VPKGPB_ENUM(VPKPDiscreteTimeRangeRectValidationError_FieldNumber) {
  VPKPDiscreteTimeRangeRectValidationError_FieldNumber_TimeRange = 1,
  VPKPDiscreteTimeRangeRectValidationError_FieldNumber_Rect = 2,
  VPKPDiscreteTimeRangeRectValidationError_FieldNumber_NonFieldErrorsArray = 3,
};

VPKGPB_FINAL @interface VPKPDiscreteTimeRangeRectValidationError : VPKGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeRangeValidationError *timeRange;
/** Test to see if @c timeRange has been set. */
@property(nonatomic, readwrite) BOOL hasTimeRange;

@property(nonatomic, readwrite, strong, null_resettable) VPKPRectValidationError *rect;
/** Test to see if @c rect has been set. */
@property(nonatomic, readwrite) BOOL hasRect;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

#pragma mark - VPKPVeepTrackElementValidationError

typedef VPKGPB_ENUM(VPKPVeepTrackElementValidationError_FieldNumber) {
  VPKPVeepTrackElementValidationError_FieldNumber_Header = 1,
  VPKPVeepTrackElementValidationError_FieldNumber_Tag = 3,
  VPKPVeepTrackElementValidationError_FieldNumber_DiscreteTimeRangeRect = 9,
  VPKPVeepTrackElementValidationError_FieldNumber_Rect = 10,
  VPKPVeepTrackElementValidationError_FieldNumber_Index = 14,
  VPKPVeepTrackElementValidationError_FieldNumber_NonFieldErrorsArray = 15,
};

typedef VPKGPB_ENUM(VPKPVeepTrackElementValidationError_Meta_OneOfCase) {
  VPKPVeepTrackElementValidationError_Meta_OneOfCase_VPKGPBUnsetOneOfCase = 0,
  VPKPVeepTrackElementValidationError_Meta_OneOfCase_Header = 1,
  VPKPVeepTrackElementValidationError_Meta_OneOfCase_Tag = 3,
};

typedef VPKGPB_ENUM(VPKPVeepTrackElementValidationError_Data_OneOfCase) {
  VPKPVeepTrackElementValidationError_Data_OneOfCase_VPKGPBUnsetOneOfCase = 0,
  VPKPVeepTrackElementValidationError_Data_OneOfCase_DiscreteTimeRangeRect = 9,
  VPKPVeepTrackElementValidationError_Data_OneOfCase_Rect = 10,
};

VPKGPB_FINAL @interface VPKPVeepTrackElementValidationError : VPKGPBMessage

@property(nonatomic, readonly) VPKPVeepTrackElementValidationError_Meta_OneOfCase metaOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackHeaderValidationError *header;

@property(nonatomic, readwrite, strong, null_resettable) VPKPVeepTrackTagValidationError *tag;

@property(nonatomic, readonly) VPKPVeepTrackElementValidationError_Data_OneOfCase dataOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) VPKPDiscreteTimeRangeRectValidationError *discreteTimeRangeRect;

@property(nonatomic, readwrite, strong, null_resettable) VPKPRectValidationError *rect;

@property(nonatomic, readwrite, copy, null_resettable) NSString *index;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *nonFieldErrorsArray;
/** The number of items in @c nonFieldErrorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger nonFieldErrorsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'meta'.
 **/
void VPKPVeepTrackElementValidationError_ClearMetaOneOfCase(VPKPVeepTrackElementValidationError *message);
/**
 * Clears whatever value was set for the oneof 'data'.
 **/
void VPKPVeepTrackElementValidationError_ClearDataOneOfCase(VPKPVeepTrackElementValidationError *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
